import Head from "next/head";
import Header from "./Header";
import Footer from "./Footer";
import Link from "next/link";
import { useState, FormEvent, FormEventHandler } from "react";
import { signIn, signOut, useSession } from "next-auth/react";
import { api } from "@/utils/api";
import { ScrollArea } from "@radix-ui/react-scroll-area";
import { Button, buttonVariants } from "./ui/button";
import { ListForm } from "@/components/listForm";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
type LayoutProps = {
  children: React.ReactNode | JSX.Element;
};

const Layout = ({ children }: LayoutProps) => {
  const { data: sessionData } = useSession();
  const addList = api.list.createList.useMutation({
    onSuccess: () => void refecthLists(),
  });
  // const { data: user } = api.user.getSingleUser.useQuery(
  //   {
  //     id: sessionData?.user.id as string,
  //   },
  //   {
  //     enabled: !!sessionData?.user,
  //   }
  // );

  // const user = sessionData?.user;
  const { data: lists, refetch: refecthLists } = api.list.getAllLists.useQuery(
    undefined,
    { enabled: true }
  );
  const [listName, setListName] = useState({ name: "" });
  const formSubmit = (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    addList.mutate(listName);
    setListName({ name: "" });
  };
  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { value } = e.target;
    setListName({ name: value });
  };

  return (
    <>
      <Head>
        <title>Lists</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main
        // data-theme="luxury"
        className="flex min-h-screen flex-col items-center justify-center bg-secondary md:grid md:grid-cols-[20%_80%]"
      >
        <ScrollArea className=" flex h-full w-full flex-col gap-3 border p-3 shadow-md">
          {lists?.length &&
            lists?.map((list) => {
              return (
                <Button
                  asChild
                  key={list.id}
                  className="border bg-background text-primary transition duration-300 ease-in-out hover:scale-105 hover:bg-accent hover:text-accent-foreground"
                >
                  <Link href={`/dashboard/list/${list.id}`}>{list.name}</Link>
                </Button>
              );
            })}
          <Dialog>
            <DialogTrigger asChild>
              <Button variant="secondary">Add List</Button>
            </DialogTrigger>
            <DialogContent className="sm:max-w-[425px]">
              <DialogHeader>
                <DialogTitle>Add a New List</DialogTitle>
                <DialogDescription>
                  Choose a name for your new List. Click save when you are done.
                </DialogDescription>
              </DialogHeader>
              <div className="grid gap-4 py-4">
                <ListForm />
                {/* <DialogFooter>
                <Button type="submit">Save List</Button>
              </DialogFooter> */}
              </div>
            </DialogContent>
          </Dialog>
        </ScrollArea>
        {children}
        {/* <input type="checkbox" className="modal-toggle" id="form-modal" />
        <div className="modal">
          <form
            onSubmit={formSubmit}
            className="form-control modal-box gap-1 rounded-md border border-primary bg-primary p-3"
          >
            <label htmlFor="listName">List Name:</label>
            <input
              type="text"
              name="listName"
              className="input-bordered input-secondary input"
              // value={value}
              onChange={handleInput}
            />
            <div className="flex items-center justify-between">
              <div className="modal-action">
                <label htmlFor="form-modal" className="btn mb-2">
                  Close
                </label>
              </div>
              <button type="submit" className="btn-secondary-content btn mt-3">
                Add List
              </button>
            </div>
          </form>
        </div> */}
      </main>
      <Footer />
    </>
  );
};

export default Layout;
